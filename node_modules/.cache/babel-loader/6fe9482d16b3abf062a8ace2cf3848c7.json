{"ast":null,"code":"import _objectSpread from \"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/bea/Documents/bea/smart-money-pocket/src/components/Dashboard/dashboard.js\";\nimport React, { Component } from \"react\";\nimport DateRange from \"../DateRangePicker/dateRangePicker\";\nimport moment from \"moment\"; // import axios from \"axios\";\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n\n    this.getDateDiff = (dateDiff, startDate, endDate) => {\n      this.setState({\n        dateDiff: dateDiff,\n        startDate: startDate,\n        endDate: endDate\n      });\n      var tempData = [];\n      this.finalTable = [];\n      console.log(\"diff\", this.state.dateDiff);\n      console.log(\"start\", this.state.startDate);\n      console.log(\"end\", this.state.endDate);\n\n      if (endDate !== undefined) {\n        for (let i = 0; i < this.state.dateDiff; i++) {\n          tempData.push({\n            date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n            entry: null,\n            attNote: null,\n            attachments: null\n          });\n          console.log(\"diff\", this.state.dateDiff);\n          console.log(\"a1\", [...tempData]);\n          this.setState({\n            tData: [...tempData]\n          });\n          console.log(\"a2\", this.state.tData); //for loop the real-time clicked data\n\n          if (startDate !== null) {\n            startDate.setDate(startDate.getDate() + 1);\n          } else {\n            let today = new Date();\n            return today;\n          }\n        }\n      } else {\n        tempData.push({\n          date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n          entry: null,\n          attNote: null,\n          attachments: null\n        });\n        console.log(\"a1\", [...tempData]);\n        this.setState({\n          tData: [...tempData]\n        });\n        console.log(\"a2\", this.state.tData);\n      }\n\n      this.attendance = [];\n      let match;\n      let cloneData = [...this.state.tData]; //to map the function\n\n      let realDates = this.state.tData.map((realDate, i) => {\n        match = this.state.user.attendance.filter(val => {\n          return val.date === realDate.date;\n        });\n        console.log(\"realClick\", realDate.date);\n\n        if (match.length > 0) {\n          cloneData[i] = _objectSpread({}, match[0]);\n          this.setState({\n            tData: [...cloneData]\n          });\n          console.log(\"final dummy data\", [...this.state.tData]);\n        }\n        /*       let selectEntryTimeResult;\n        if (this.state.user.role == \"trainer\") {\n          selectEntryTimeResult = (\n            <EntryTimeSelect\n              onSave={this.HandleEnterTimeReset}\n              onChange={this.HandleEnterTimeReset}\n              entry={this.state.tData[i].entry}\n              value={realDate.date} //to match the rel click to the cliked date\n            />\n          );\n        } else if (this.state.user.role == \"manager\") {\n          selectEntryTimeResult = (\n            <EntryTimeSelect\n              onSave={this.HandleEnterTimeReset}\n              onChange={this.HandleEnterTimeReset}\n              entry={this.state.tData[i].entry}\n              value={realDate.date} //to match the rel click to the cliked date\n            />\n          );\n        } else {\n          selectEntryTimeResult = this.state.tData[i].entry;\n        }\n         let studentNoteResult;\n        if (this.state.user.role == \"attendee\") {\n          studentNoteResult = (\n            <AttendenceNote\n              onClick={this.HandleAttendenceNote}\n              onClose={this.HandleAttendenceNote}\n              onChange={this.HandleAttendenceNote}\n              attNote={this.state.tData[i].attNote}\n              onCancel={this.HandleAttendenceNote}\n              value={realDate.date} //from getDateDiff event\n            />\n          );\n        } else {\n          studentNoteResult = this.state.tData[i].attNote;\n        }\n         let uploadResult;\n        if (this.state.user.role == \"attendee\") {\n          uploadResult = (\n            <Upload\n              onClick={this.HandleAttachment}\n              onChange={this.HandleAttachment}\n              attachments={this.state.tData[i].attachments}\n              value={realDate.date}\n            />\n          );\n        } else if (this.state.user.role == \"trainer\") {\n          uploadResult = (\n            <Upload\n              onClick={this.HandleAttachment}\n              onChange={this.HandleAttachment}\n              attachments={this.state.tData[i].attachments}\n              value={realDate.date}\n            />\n          );\n        } else if (this.state.user.role == \"manager\") {\n          uploadResult = (\n            <Upload\n              onClick={this.HandleAttachment}\n              onChange={this.HandleAttachment}\n              attachments={this.state.tData[i].attachments}\n              value={realDate.date}\n            />\n          );\n        } else {\n          uploadResult = this.state.tData[i].attachments;\n        }\n        */\n\n\n        this.finalTable.push(React.createElement(\"tr\", {\n          key: i,\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395\n          },\n          __self: this\n        }, this.state.tData[i].date, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          },\n          __self: this\n        }, \"1\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397\n          },\n          __self: this\n        }, \"2\"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }, \"3\"))); // startDate.setDate(startDate.getDate() + 1);\n\n        this.setState({\n          catchDate: true\n        });\n        console.log(\"realDate\", realDate.date);\n      });\n    };\n\n    this.studentTable = [];\n\n    let _today = new Date(),\n        date = _today.getFullYear() + \"-\" + (_today.getMonth() + 1) + \"-\" + _today.getDate();\n\n    this.state = {\n      user: {\n        //trainer self\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        className: [\"Fbw1\", \"Fbw2\"],\n        schoolName: \"DCI\",\n        role: \"trainer\",\n        attendance: [{\n          date: \"01.12.2019\",\n          entry: \"10:39 am\",\n          exit: \"04:45 pm\",\n          timeDiff: \"08:00 am\",\n          status: \"Late\",\n          attNote: \"late train\",\n          trainerNote: null,\n          attachments: []\n        }, {\n          date: \"02.12.2019\",\n          entry: \"12:00 am\",\n          exit: \"17:00 am\",\n          timeDiff: \"07:00 am\",\n          status: \"Late\",\n          attNote: null,\n          trainerNote: \"please offer me a prove, thanks \",\n          attachments: []\n        }, {\n          date: \"03.12.2019\",\n          entry: \"11:00 am\",\n          exit: \"13:00 am\",\n          timeDiff: \"05:00 am\",\n          status: \"Late\",\n          attNote: \"Bus was late. Plase find enclosed attachments\",\n          trainerNote: null,\n          attachments: \"03.12.2019_1.jpg\",\n          alert: null\n        }, {\n          date: \"04.12.2019\",\n          entry: null,\n          exit: null,\n          timeDiff: \"02:00 am\",\n          status: \"Late\",\n          attNote: null,\n          trainerNote: \"ok\",\n          attachments: []\n        }, {\n          date: \"05.12.2019\",\n          entry: \"08:00 am\",\n          exit: \"16:00 am\",\n          timeDiff: \"08:00 am\",\n          status: \"On Time\",\n          attNote: null,\n          trainerNote: null,\n          attachments: []\n        }, {\n          date: \"06.12.2019\",\n          entry: \"08:00 am\",\n          exit: \"16:00 am\",\n          timeDiff: \"08:00 am\",\n          status: \"On Time\",\n          attNote: null,\n          trainerNote: null,\n          attachments: []\n        }, {\n          date: \"07.12.2019\",\n          entry: \"08:00 am\",\n          exit: \"16:00 am\",\n          timeDiff: \"08:00 am\",\n          status: \"On Time\",\n          attNote: null,\n          trainerNote: null,\n          attachments: []\n        }, {\n          date: \"08.12.2019\",\n          entry: \"08:30 am\",\n          exit: \"16:00 am\",\n          timeDiff: \"04:00 am\",\n          status: \"On Time\",\n          attNote: \"Bus was late. Plase find enclosed attachments\",\n          trainerNote: null,\n          attachments: \"08.12.2019_1.jpg\"\n        }, {\n          date: \"09.12.2019\",\n          entry: \"08:30 am\",\n          exit: \"16:00 am\",\n          timeDiff: \"08:00 am\",\n          status: \"On Time\",\n          attNote: null,\n          trainerNote: null,\n          attachments: []\n        }, {\n          date: \"10.12.2019\",\n          entry: \"08:00 am\",\n          exit: \"16:00 am\",\n          timeDiff: \"08:00 am\",\n          status: \"On Time\",\n          attNote: null,\n          trainerNote: null,\n          attachments: []\n        }]\n      },\n      tData: [],\n      selectedStudent: \"\",\n      studentList: [],\n      selectStudentTable: [],\n      date: date,\n      entry: \"\",\n      exit: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      dateDiff: \"\",\n      attNote: \"\",\n      trainerNote: \"\",\n      attachments: \"\",\n      status: \"\",\n      hours1: \"\",\n      min1: \"\",\n      hours2: \"\",\n      min2: \"\",\n      sec1: \"\",\n      sec2: \"\",\n      timeDiff: \"\",\n      catchDate: false\n    };\n    this.getDateDiff = this.getDateDiff.bind(this); //     this.HandleEnterTimeReset = this.HandleEnterTimeReset.bind(this);\n    //     this.HandleAttendenceNote = this.HandleAttendenceNote.bind(this);\n    //     this.HandleAttachment = this.HandleAttachment.bind(this);\n  } //   componentDidMount() {\n  //     axios({\n  //       method: \"get\",\n  //       url: \"https://attrc.herokuapp.com/api/dashboard/\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"x-auth-token\": localStorage.getItem(\"jwtToken\")\n  //       }\n  //     }).then(res => {\n  //       const user = res.data.result.user;\n  //       console.log(user);\n  //       this.setState({ user: user });\n  //       console.log(this.state.user);\n  //     });\n  //   }\n  //   HandleEnterTimeReset(val, date) {\n  //     //selected entrytime\n  //     let entry = val;\n  //     console.log(\"entry time\", entry);\n  //     //selected date\n  //     let entryDate = date;\n  //     console.log(\"entry time date\", entryDate);\n  //     let matchArr = [];\n  //     let entryDates = this.state.tData.map(entryDate => {\n  //       var entryDate = date;\n  //       console.log(entryDate);\n  //       matchArr = this.state.user.attendance.filter(val => {\n  //         return val.date === entryDate;\n  //       });\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].entry = entry;\n  //         this.setState({ attendance: [...matchArr] });\n  //       }\n  //       console.log(\"Entry reset matchArr\", matchArr);\n  //       console.log(\"this.state.user.entry\", this.state.tData);\n  //     });\n  //     this.setState({\n  //       entry: entry //to reset the entrytime to the state and send it to the trainer entry time\n  //     });\n  //   }\n  //   HandleAttendenceNote(val, date) {\n  //     var attNote = val;\n  //     console.log(\"attNote val\", attNote);\n  //     //pass the selected date from textedit from child component\n  //     var attDate = date;\n  //     console.log(\"attNote val selected date\", attDate);\n  //     let matchArr = [];\n  //     let attDates = this.state.tData.map((attDate, i) => {\n  //       var attDate = date;\n  //       console.log(attDate);\n  //       matchArr = this.state.user.attendance.filter((val, i) => {\n  //         return val.date === attDate;\n  //       });\n  //       console.log(\"matchArr attNote update\", matchArr);\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].attNote = attNote;\n  //         this.setState({ attendance: [...matchArr], attNote: attNote });\n  //       }\n  //     });\n  //   }\n  //   HandleAttachment(val, date) {\n  //     let attachments = val;\n  //     console.log(\"attachment value\", attachments);\n  //     var fileDate = date;\n  //     console.log(\"attachment date\", fileDate);\n  //     let matchArr;\n  //     let fileDates = this.state.tData.map((fileDate, i) => {\n  //       matchArr = this.state.user.attendance.filter((val, i) => {\n  //         return val.date === fileDate;\n  //       });\n  //       console.log(\"attachment final matchArr\", matchArr);\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].attachments = attachments;\n  //         this.setState({\n  //           attendance: [...matchArr],\n  //           attachments: attachments\n  //         });\n  //       }\n  //     });\n  //   }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, \"Select your Data here\"), React.createElement(DateRange, {\n      onClose: this.getDateDiff,\n      dateDiff: this.state.dateDiff,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      style: {\n        marginLeft: \"20%\",\n        textAlign: \"center\",\n        width: \"80%\",\n        border: \"1px 1px solid grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      },\n      __self: this\n    }, this.finalTable)));\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/bea/Documents/bea/smart-money-pocket/src/components/Dashboard/dashboard.js"],"names":["React","Component","DateRange","moment","Dashboard","constructor","getDateDiff","dateDiff","startDate","endDate","setState","tempData","finalTable","console","log","state","undefined","i","push","date","format","entry","attNote","attachments","tData","setDate","getDate","today","Date","attendance","match","cloneData","realDates","map","realDate","user","filter","val","length","catchDate","studentTable","getFullYear","getMonth","firstname","lastname","email","className","schoolName","role","exit","timeDiff","status","trainerNote","alert","selectedStudent","studentList","selectStudentTable","hours1","min1","hours2","min2","sec1","sec2","bind","render","marginLeft","textAlign","width","border"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DateRange from \"../DateRangePicker/dateRangePicker\";\nimport moment from \"moment\";\n// import axios from \"axios\";\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.studentTable = [];\n    let today = new Date(),\n      date =\n        today.getFullYear() +\n        \"-\" +\n        (today.getMonth() + 1) +\n        \"-\" +\n        today.getDate();\n\n    this.state = {\n      user: {\n        //trainer self\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        className: [\"Fbw1\", \"Fbw2\"],\n        schoolName: \"DCI\",\n        role: \"trainer\",\n        attendance: [\n          {\n            date: \"01.12.2019\",\n            entry: \"10:39 am\",\n            exit: \"04:45 pm\",\n            timeDiff: \"08:00 am\",\n            status: \"Late\",\n            attNote: \"late train\",\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"02.12.2019\",\n            entry: \"12:00 am\",\n            exit: \"17:00 am\",\n            timeDiff: \"07:00 am\",\n            status: \"Late\",\n            attNote: null,\n            trainerNote: \"please offer me a prove, thanks \",\n            attachments: []\n          },\n          {\n            date: \"03.12.2019\",\n            entry: \"11:00 am\",\n            exit: \"13:00 am\",\n            timeDiff: \"05:00 am\",\n            status: \"Late\",\n            attNote: \"Bus was late. Plase find enclosed attachments\",\n            trainerNote: null,\n            attachments: \"03.12.2019_1.jpg\",\n            alert: null\n          },\n          {\n            date: \"04.12.2019\",\n            entry: null,\n            exit: null,\n            timeDiff: \"02:00 am\",\n            status: \"Late\",\n            attNote: null,\n            trainerNote: \"ok\",\n            attachments: []\n          },\n          {\n            date: \"05.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"06.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"07.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"08.12.2019\",\n            entry: \"08:30 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"04:00 am\",\n            status: \"On Time\",\n            attNote: \"Bus was late. Plase find enclosed attachments\",\n            trainerNote: null,\n            attachments: \"08.12.2019_1.jpg\"\n          },\n          {\n            date: \"09.12.2019\",\n            entry: \"08:30 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"10.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          }\n        ]\n      },\n      tData: [],\n      selectedStudent: \"\",\n      studentList: [],\n      selectStudentTable: [],\n      date: date,\n      entry: \"\",\n      exit: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      dateDiff: \"\",\n      attNote: \"\",\n      trainerNote: \"\",\n      attachments: \"\",\n      status: \"\",\n      hours1: \"\",\n      min1: \"\",\n      hours2: \"\",\n      min2: \"\",\n      sec1: \"\",\n      sec2: \"\",\n      timeDiff: \"\",\n      catchDate: false\n    };\n\n    this.getDateDiff = this.getDateDiff.bind(this);\n    //     this.HandleEnterTimeReset = this.HandleEnterTimeReset.bind(this);\n    //     this.HandleAttendenceNote = this.HandleAttendenceNote.bind(this);\n    //     this.HandleAttachment = this.HandleAttachment.bind(this);\n  }\n\n  //   componentDidMount() {\n  //     axios({\n  //       method: \"get\",\n  //       url: \"https://attrc.herokuapp.com/api/dashboard/\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"x-auth-token\": localStorage.getItem(\"jwtToken\")\n  //       }\n  //     }).then(res => {\n  //       const user = res.data.result.user;\n  //       console.log(user);\n  //       this.setState({ user: user });\n  //       console.log(this.state.user);\n  //     });\n  //   }\n\n  //   HandleEnterTimeReset(val, date) {\n  //     //selected entrytime\n  //     let entry = val;\n  //     console.log(\"entry time\", entry);\n\n  //     //selected date\n  //     let entryDate = date;\n  //     console.log(\"entry time date\", entryDate);\n\n  //     let matchArr = [];\n  //     let entryDates = this.state.tData.map(entryDate => {\n  //       var entryDate = date;\n  //       console.log(entryDate);\n  //       matchArr = this.state.user.attendance.filter(val => {\n  //         return val.date === entryDate;\n  //       });\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].entry = entry;\n  //         this.setState({ attendance: [...matchArr] });\n  //       }\n  //       console.log(\"Entry reset matchArr\", matchArr);\n  //       console.log(\"this.state.user.entry\", this.state.tData);\n  //     });\n\n  //     this.setState({\n  //       entry: entry //to reset the entrytime to the state and send it to the trainer entry time\n  //     });\n  //   }\n\n  //   HandleAttendenceNote(val, date) {\n  //     var attNote = val;\n  //     console.log(\"attNote val\", attNote);\n\n  //     //pass the selected date from textedit from child component\n  //     var attDate = date;\n  //     console.log(\"attNote val selected date\", attDate);\n\n  //     let matchArr = [];\n  //     let attDates = this.state.tData.map((attDate, i) => {\n  //       var attDate = date;\n  //       console.log(attDate);\n  //       matchArr = this.state.user.attendance.filter((val, i) => {\n  //         return val.date === attDate;\n  //       });\n  //       console.log(\"matchArr attNote update\", matchArr);\n\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].attNote = attNote;\n  //         this.setState({ attendance: [...matchArr], attNote: attNote });\n  //       }\n  //     });\n  //   }\n\n  //   HandleAttachment(val, date) {\n  //     let attachments = val;\n  //     console.log(\"attachment value\", attachments);\n\n  //     var fileDate = date;\n  //     console.log(\"attachment date\", fileDate);\n\n  //     let matchArr;\n  //     let fileDates = this.state.tData.map((fileDate, i) => {\n  //       matchArr = this.state.user.attendance.filter((val, i) => {\n  //         return val.date === fileDate;\n  //       });\n  //       console.log(\"attachment final matchArr\", matchArr);\n\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].attachments = attachments;\n\n  //         this.setState({\n  //           attendance: [...matchArr],\n  //           attachments: attachments\n  //         });\n  //       }\n  //     });\n  //   }\n\n  getDateDiff = (dateDiff, startDate, endDate) => {\n    this.setState({\n      dateDiff: dateDiff,\n      startDate: startDate,\n      endDate: endDate\n    });\n    var tempData = [];\n\n    this.finalTable = [];\n    console.log(\"diff\", this.state.dateDiff);\n    console.log(\"start\", this.state.startDate);\n    console.log(\"end\", this.state.endDate);\n\n    if (endDate !== undefined) {\n      for (let i = 0; i < this.state.dateDiff; i++) {\n        tempData.push({\n          date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n          entry: null,\n          attNote: null,\n          attachments: null\n        });\n        console.log(\"diff\", this.state.dateDiff);\n        console.log(\"a1\", [...tempData]);\n        this.setState({\n          tData: [...tempData]\n        });\n        console.log(\"a2\", this.state.tData);\n        //for loop the real-time clicked data\n        if (startDate !== null) {\n          startDate.setDate(startDate.getDate() + 1);\n        } else {\n          let today = new Date();\n          return today;\n        }\n      }\n    } else {\n      tempData.push({\n        date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n        entry: null,\n        attNote: null,\n        attachments: null\n      });\n      console.log(\"a1\", [...tempData]);\n      this.setState({\n        tData: [...tempData]\n      });\n      console.log(\"a2\", this.state.tData);\n    }\n\n    this.attendance = [];\n    let match;\n    let cloneData = [...this.state.tData];\n    //to map the function\n    let realDates = this.state.tData.map((realDate, i) => {\n      match = this.state.user.attendance.filter(val => {\n        return val.date === realDate.date;\n      });\n      console.log(\"realClick\", realDate.date);\n\n      if (match.length > 0) {\n        cloneData[i] = { ...match[0] };\n        this.setState({ tData: [...cloneData] });\n        console.log(\"final dummy data\", [...this.state.tData]);\n      }\n\n      /*       let selectEntryTimeResult;\n      if (this.state.user.role == \"trainer\") {\n        selectEntryTimeResult = (\n          <EntryTimeSelect\n            onSave={this.HandleEnterTimeReset}\n            onChange={this.HandleEnterTimeReset}\n            entry={this.state.tData[i].entry}\n            value={realDate.date} //to match the rel click to the cliked date\n          />\n        );\n      } else if (this.state.user.role == \"manager\") {\n        selectEntryTimeResult = (\n          <EntryTimeSelect\n            onSave={this.HandleEnterTimeReset}\n            onChange={this.HandleEnterTimeReset}\n            entry={this.state.tData[i].entry}\n            value={realDate.date} //to match the rel click to the cliked date\n          />\n        );\n      } else {\n        selectEntryTimeResult = this.state.tData[i].entry;\n      }\n\n      let studentNoteResult;\n      if (this.state.user.role == \"attendee\") {\n        studentNoteResult = (\n          <AttendenceNote\n            onClick={this.HandleAttendenceNote}\n            onClose={this.HandleAttendenceNote}\n            onChange={this.HandleAttendenceNote}\n            attNote={this.state.tData[i].attNote}\n            onCancel={this.HandleAttendenceNote}\n            value={realDate.date} //from getDateDiff event\n          />\n        );\n      } else {\n        studentNoteResult = this.state.tData[i].attNote;\n      }\n\n      let uploadResult;\n      if (this.state.user.role == \"attendee\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else if (this.state.user.role == \"trainer\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else if (this.state.user.role == \"manager\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else {\n        uploadResult = this.state.tData[i].attachments;\n      }\n\n */\n\n      this.finalTable.push(\n        <tr key={i} align=\"center\">\n          <td>{this.state.tData[i].date} </td>\n          <td>1</td>\n          <td>2</td>\n          <td>3</td>\n\n          {/* <td>{selectEntryTimeResult}</td>\n          <td>{studentNoteResult}</td>\n          <td>{uploadResult}</td> */}\n        </tr>\n      );\n\n      // startDate.setDate(startDate.getDate() + 1);\n      this.setState({\n        catchDate: true\n      });\n      console.log(\"realDate\", realDate.date);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <h4>Select your Data here</h4>\n        <DateRange\n          onClose={this.getDateDiff}\n          dateDiff={this.state.dateDiff}\n          startDate={this.state.startDate}\n          endDate={this.state.endDate}\n        />\n        <table\n          style={{\n            marginLeft: \"20%\",\n            textAlign: \"center\",\n            width: \"80%\",\n            border: \"1px 1px solid grey\"\n          }}\n        >\n          <td>{this.finalTable}</td>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}