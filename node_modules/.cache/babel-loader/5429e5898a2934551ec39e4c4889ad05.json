{"ast":null,"code":"import _objectSpread from\"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/bea/Documents/bea/smart-money-pocket/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import DateRange from\"../DateRangePicker/dateRangePicker\";import moment from\"moment\";// import axios from \"axios\";\nvar Dashboard=/*#__PURE__*/function(_React$Component){_inherits(Dashboard,_React$Component);function Dashboard(){var _this;_classCallCheck(this,Dashboard);_this=_possibleConstructorReturn(this,_getPrototypeOf(Dashboard).call(this));_this.getDateDiff=function(dateDiff,startDate,endDate){_this.setState({dateDiff:dateDiff,startDate:startDate,endDate:endDate});var tempData=[];_this.finalTable=[];console.log(\"diff\",_this.state.dateDiff);console.log(\"start\",_this.state.startDate);console.log(\"end\",_this.state.endDate);if(endDate!==undefined){for(var i=0;i<_this.state.dateDiff;i++){tempData.push({date:moment(_this.state.startDate).format(\"DD.MM.YYYY\"),entry:null,attNote:null,attachments:null});console.log(\"diff\",_this.state.dateDiff);console.log(\"a1\",[].concat(tempData));_this.setState({tData:[].concat(tempData)});console.log(\"a2\",_this.state.tData);//for loop the real-time clicked data\nif(startDate!==null){startDate.setDate(startDate.getDate()+1);}else{var today=new Date();return today;}}}else{tempData.push({date:moment(_this.state.startDate).format(\"DD.MM.YYYY\"),entry:null,attNote:null,attachments:null});console.log(\"a1\",[].concat(tempData));_this.setState({tData:[].concat(tempData)});console.log(\"a2\",_this.state.tData);}_this.attendance=[];var match;var cloneData=_toConsumableArray(_this.state.tData);//to map the function\nvar realDates=_this.state.tData.map(function(realDate,i){match=_this.state.user.attendance.filter(function(val){return val.date===realDate.date;});console.log(\"realClick\",realDate.date);if(match.length>0){cloneData[i]=_objectSpread({},match[0]);_this.setState({tData:_toConsumableArray(cloneData)});console.log(\"final dummy data\",_toConsumableArray(_this.state.tData));}/*       let selectEntryTimeResult;\n      if (this.state.user.role == \"trainer\") {\n        selectEntryTimeResult = (\n          <EntryTimeSelect\n            onSave={this.HandleEnterTimeReset}\n            onChange={this.HandleEnterTimeReset}\n            entry={this.state.tData[i].entry}\n            value={realDate.date} //to match the rel click to the cliked date\n          />\n        );\n      } else if (this.state.user.role == \"manager\") {\n        selectEntryTimeResult = (\n          <EntryTimeSelect\n            onSave={this.HandleEnterTimeReset}\n            onChange={this.HandleEnterTimeReset}\n            entry={this.state.tData[i].entry}\n            value={realDate.date} //to match the rel click to the cliked date\n          />\n        );\n      } else {\n        selectEntryTimeResult = this.state.tData[i].entry;\n      }\n\n      let studentNoteResult;\n      if (this.state.user.role == \"attendee\") {\n        studentNoteResult = (\n          <AttendenceNote\n            onClick={this.HandleAttendenceNote}\n            onClose={this.HandleAttendenceNote}\n            onChange={this.HandleAttendenceNote}\n            attNote={this.state.tData[i].attNote}\n            onCancel={this.HandleAttendenceNote}\n            value={realDate.date} //from getDateDiff event\n          />\n        );\n      } else {\n        studentNoteResult = this.state.tData[i].attNote;\n      }\n\n      let uploadResult;\n      if (this.state.user.role == \"attendee\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else if (this.state.user.role == \"trainer\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else if (this.state.user.role == \"manager\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else {\n        uploadResult = this.state.tData[i].attachments;\n      }\n\n */_this.finalTable.push(React.createElement(\"tr\",{key:i,align:\"center\"},React.createElement(\"td\",null,_this.state.tData[i].date,\" \"),React.createElement(\"td\",null,\"1\"),React.createElement(\"td\",null,\"2\"),React.createElement(\"td\",null,\"3\")));// startDate.setDate(startDate.getDate() + 1);\n_this.setState({catchDate:true});console.log(\"realDate\",realDate.date);});};_this.studentTable=[];var _today=new Date(),date=_today.getFullYear()+\"-\"+(_today.getMonth()+1)+\"-\"+_today.getDate();_this.state={user:{//trainer self\nfirstname:\"\",lastname:\"\",email:\"\",className:[\"Fbw1\",\"Fbw2\"],schoolName:\"DCI\",role:\"trainer\",attendance:[{date:\"01.12.2019\",entry:\"10:39 am\",exit:\"04:45 pm\",timeDiff:\"08:00 am\",status:\"Late\",attNote:\"late train\",trainerNote:null,attachments:[]},{date:\"02.12.2019\",entry:\"12:00 am\",exit:\"17:00 am\",timeDiff:\"07:00 am\",status:\"Late\",attNote:null,trainerNote:\"please offer me a prove, thanks \",attachments:[]},{date:\"03.12.2019\",entry:\"11:00 am\",exit:\"13:00 am\",timeDiff:\"05:00 am\",status:\"Late\",attNote:\"Bus was late. Plase find enclosed attachments\",trainerNote:null,attachments:\"03.12.2019_1.jpg\",alert:null},{date:\"04.12.2019\",entry:null,exit:null,timeDiff:\"02:00 am\",status:\"Late\",attNote:null,trainerNote:\"ok\",attachments:[]},{date:\"05.12.2019\",entry:\"08:00 am\",exit:\"16:00 am\",timeDiff:\"08:00 am\",status:\"On Time\",attNote:null,trainerNote:null,attachments:[]},{date:\"06.12.2019\",entry:\"08:00 am\",exit:\"16:00 am\",timeDiff:\"08:00 am\",status:\"On Time\",attNote:null,trainerNote:null,attachments:[]},{date:\"07.12.2019\",entry:\"08:00 am\",exit:\"16:00 am\",timeDiff:\"08:00 am\",status:\"On Time\",attNote:null,trainerNote:null,attachments:[]},{date:\"08.12.2019\",entry:\"08:30 am\",exit:\"16:00 am\",timeDiff:\"04:00 am\",status:\"On Time\",attNote:\"Bus was late. Plase find enclosed attachments\",trainerNote:null,attachments:\"08.12.2019_1.jpg\"},{date:\"09.12.2019\",entry:\"08:30 am\",exit:\"16:00 am\",timeDiff:\"08:00 am\",status:\"On Time\",attNote:null,trainerNote:null,attachments:[]},{date:\"10.12.2019\",entry:\"08:00 am\",exit:\"16:00 am\",timeDiff:\"08:00 am\",status:\"On Time\",attNote:null,trainerNote:null,attachments:[]}]},tData:[],selectedStudent:\"\",studentList:[],selectStudentTable:[],date:date,entry:\"\",exit:\"\",startDate:\"\",endDate:\"\",dateDiff:\"\",attNote:\"\",trainerNote:\"\",attachments:\"\",status:\"\",hours1:\"\",min1:\"\",hours2:\"\",min2:\"\",sec1:\"\",sec2:\"\",timeDiff:\"\",catchDate:false};_this.getDateDiff=_this.getDateDiff.bind(_assertThisInitialized(_this));//     this.HandleEnterTimeReset = this.HandleEnterTimeReset.bind(this);\n//     this.HandleAttendenceNote = this.HandleAttendenceNote.bind(this);\n//     this.HandleAttachment = this.HandleAttachment.bind(this);\nreturn _this;}//   componentDidMount() {\n//     axios({\n//       method: \"get\",\n//       url: \"https://attrc.herokuapp.com/api/dashboard/\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"x-auth-token\": localStorage.getItem(\"jwtToken\")\n//       }\n//     }).then(res => {\n//       const user = res.data.result.user;\n//       console.log(user);\n//       this.setState({ user: user });\n//       console.log(this.state.user);\n//     });\n//   }\n//   HandleEnterTimeReset(val, date) {\n//     //selected entrytime\n//     let entry = val;\n//     console.log(\"entry time\", entry);\n//     //selected date\n//     let entryDate = date;\n//     console.log(\"entry time date\", entryDate);\n//     let matchArr = [];\n//     let entryDates = this.state.tData.map(entryDate => {\n//       var entryDate = date;\n//       console.log(entryDate);\n//       matchArr = this.state.user.attendance.filter(val => {\n//         return val.date === entryDate;\n//       });\n//       if (matchArr.length > 0) {\n//         matchArr[0].entry = entry;\n//         this.setState({ attendance: [...matchArr] });\n//       }\n//       console.log(\"Entry reset matchArr\", matchArr);\n//       console.log(\"this.state.user.entry\", this.state.tData);\n//     });\n//     this.setState({\n//       entry: entry //to reset the entrytime to the state and send it to the trainer entry time\n//     });\n//   }\n//   HandleAttendenceNote(val, date) {\n//     var attNote = val;\n//     console.log(\"attNote val\", attNote);\n//     //pass the selected date from textedit from child component\n//     var attDate = date;\n//     console.log(\"attNote val selected date\", attDate);\n//     let matchArr = [];\n//     let attDates = this.state.tData.map((attDate, i) => {\n//       var attDate = date;\n//       console.log(attDate);\n//       matchArr = this.state.user.attendance.filter((val, i) => {\n//         return val.date === attDate;\n//       });\n//       console.log(\"matchArr attNote update\", matchArr);\n//       if (matchArr.length > 0) {\n//         matchArr[0].attNote = attNote;\n//         this.setState({ attendance: [...matchArr], attNote: attNote });\n//       }\n//     });\n//   }\n//   HandleAttachment(val, date) {\n//     let attachments = val;\n//     console.log(\"attachment value\", attachments);\n//     var fileDate = date;\n//     console.log(\"attachment date\", fileDate);\n//     let matchArr;\n//     let fileDates = this.state.tData.map((fileDate, i) => {\n//       matchArr = this.state.user.attendance.filter((val, i) => {\n//         return val.date === fileDate;\n//       });\n//       console.log(\"attachment final matchArr\", matchArr);\n//       if (matchArr.length > 0) {\n//         matchArr[0].attachments = attachments;\n//         this.setState({\n//           attendance: [...matchArr],\n//           attachments: attachments\n//         });\n//       }\n//     });\n//   }\n_createClass(Dashboard,[{key:\"render\",value:function render(){return React.createElement(\"div\",{className:\"dashboard\"},React.createElement(\"h4\",null,\"Select your Data here\"),React.createElement(DateRange,{onClose:this.getDateDiff,dateDiff:this.state.dateDiff,startDate:this.state.startDate,endDate:this.state.endDate}),React.createElement(\"td\",null,this.finalTable));}}]);return Dashboard;}(React.Component);export default Dashboard;","map":{"version":3,"sources":["/home/bea/Documents/bea/smart-money-pocket/src/components/Dashboard/dashboard.js"],"names":["React","Component","DateRange","moment","Dashboard","getDateDiff","dateDiff","startDate","endDate","setState","tempData","finalTable","console","log","state","undefined","i","push","date","format","entry","attNote","attachments","tData","setDate","getDate","today","Date","attendance","match","cloneData","realDates","map","realDate","user","filter","val","length","catchDate","studentTable","getFullYear","getMonth","firstname","lastname","email","className","schoolName","role","exit","timeDiff","status","trainerNote","alert","selectedStudent","studentList","selectStudentTable","hours1","min1","hours2","min2","sec1","sec2","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DateRange from \"../DateRangePicker/dateRangePicker\";\nimport moment from \"moment\";\n// import axios from \"axios\";\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.studentTable = [];\n    let today = new Date(),\n      date =\n        today.getFullYear() +\n        \"-\" +\n        (today.getMonth() + 1) +\n        \"-\" +\n        today.getDate();\n\n    this.state = {\n      user: {\n        //trainer self\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        className: [\"Fbw1\", \"Fbw2\"],\n        schoolName: \"DCI\",\n        role: \"trainer\",\n        attendance: [\n          {\n            date: \"01.12.2019\",\n            entry: \"10:39 am\",\n            exit: \"04:45 pm\",\n            timeDiff: \"08:00 am\",\n            status: \"Late\",\n            attNote: \"late train\",\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"02.12.2019\",\n            entry: \"12:00 am\",\n            exit: \"17:00 am\",\n            timeDiff: \"07:00 am\",\n            status: \"Late\",\n            attNote: null,\n            trainerNote: \"please offer me a prove, thanks \",\n            attachments: []\n          },\n          {\n            date: \"03.12.2019\",\n            entry: \"11:00 am\",\n            exit: \"13:00 am\",\n            timeDiff: \"05:00 am\",\n            status: \"Late\",\n            attNote: \"Bus was late. Plase find enclosed attachments\",\n            trainerNote: null,\n            attachments: \"03.12.2019_1.jpg\",\n            alert: null\n          },\n          {\n            date: \"04.12.2019\",\n            entry: null,\n            exit: null,\n            timeDiff: \"02:00 am\",\n            status: \"Late\",\n            attNote: null,\n            trainerNote: \"ok\",\n            attachments: []\n          },\n          {\n            date: \"05.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"06.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"07.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"08.12.2019\",\n            entry: \"08:30 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"04:00 am\",\n            status: \"On Time\",\n            attNote: \"Bus was late. Plase find enclosed attachments\",\n            trainerNote: null,\n            attachments: \"08.12.2019_1.jpg\"\n          },\n          {\n            date: \"09.12.2019\",\n            entry: \"08:30 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"10.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          }\n        ]\n      },\n      tData: [],\n      selectedStudent: \"\",\n      studentList: [],\n      selectStudentTable: [],\n      date: date,\n      entry: \"\",\n      exit: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      dateDiff: \"\",\n      attNote: \"\",\n      trainerNote: \"\",\n      attachments: \"\",\n      status: \"\",\n      hours1: \"\",\n      min1: \"\",\n      hours2: \"\",\n      min2: \"\",\n      sec1: \"\",\n      sec2: \"\",\n      timeDiff: \"\",\n      catchDate: false\n    };\n\n    this.getDateDiff = this.getDateDiff.bind(this);\n    //     this.HandleEnterTimeReset = this.HandleEnterTimeReset.bind(this);\n    //     this.HandleAttendenceNote = this.HandleAttendenceNote.bind(this);\n    //     this.HandleAttachment = this.HandleAttachment.bind(this);\n  }\n\n  //   componentDidMount() {\n  //     axios({\n  //       method: \"get\",\n  //       url: \"https://attrc.herokuapp.com/api/dashboard/\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"x-auth-token\": localStorage.getItem(\"jwtToken\")\n  //       }\n  //     }).then(res => {\n  //       const user = res.data.result.user;\n  //       console.log(user);\n  //       this.setState({ user: user });\n  //       console.log(this.state.user);\n  //     });\n  //   }\n\n  //   HandleEnterTimeReset(val, date) {\n  //     //selected entrytime\n  //     let entry = val;\n  //     console.log(\"entry time\", entry);\n\n  //     //selected date\n  //     let entryDate = date;\n  //     console.log(\"entry time date\", entryDate);\n\n  //     let matchArr = [];\n  //     let entryDates = this.state.tData.map(entryDate => {\n  //       var entryDate = date;\n  //       console.log(entryDate);\n  //       matchArr = this.state.user.attendance.filter(val => {\n  //         return val.date === entryDate;\n  //       });\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].entry = entry;\n  //         this.setState({ attendance: [...matchArr] });\n  //       }\n  //       console.log(\"Entry reset matchArr\", matchArr);\n  //       console.log(\"this.state.user.entry\", this.state.tData);\n  //     });\n\n  //     this.setState({\n  //       entry: entry //to reset the entrytime to the state and send it to the trainer entry time\n  //     });\n  //   }\n\n  //   HandleAttendenceNote(val, date) {\n  //     var attNote = val;\n  //     console.log(\"attNote val\", attNote);\n\n  //     //pass the selected date from textedit from child component\n  //     var attDate = date;\n  //     console.log(\"attNote val selected date\", attDate);\n\n  //     let matchArr = [];\n  //     let attDates = this.state.tData.map((attDate, i) => {\n  //       var attDate = date;\n  //       console.log(attDate);\n  //       matchArr = this.state.user.attendance.filter((val, i) => {\n  //         return val.date === attDate;\n  //       });\n  //       console.log(\"matchArr attNote update\", matchArr);\n\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].attNote = attNote;\n  //         this.setState({ attendance: [...matchArr], attNote: attNote });\n  //       }\n  //     });\n  //   }\n\n  //   HandleAttachment(val, date) {\n  //     let attachments = val;\n  //     console.log(\"attachment value\", attachments);\n\n  //     var fileDate = date;\n  //     console.log(\"attachment date\", fileDate);\n\n  //     let matchArr;\n  //     let fileDates = this.state.tData.map((fileDate, i) => {\n  //       matchArr = this.state.user.attendance.filter((val, i) => {\n  //         return val.date === fileDate;\n  //       });\n  //       console.log(\"attachment final matchArr\", matchArr);\n\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].attachments = attachments;\n\n  //         this.setState({\n  //           attendance: [...matchArr],\n  //           attachments: attachments\n  //         });\n  //       }\n  //     });\n  //   }\n\n  getDateDiff = (dateDiff, startDate, endDate) => {\n    this.setState({\n      dateDiff: dateDiff,\n      startDate: startDate,\n      endDate: endDate\n    });\n    var tempData = [];\n\n    this.finalTable = [];\n    console.log(\"diff\", this.state.dateDiff);\n    console.log(\"start\", this.state.startDate);\n    console.log(\"end\", this.state.endDate);\n\n    if (endDate !== undefined) {\n      for (let i = 0; i < this.state.dateDiff; i++) {\n        tempData.push({\n          date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n          entry: null,\n          attNote: null,\n          attachments: null\n        });\n        console.log(\"diff\", this.state.dateDiff);\n        console.log(\"a1\", [...tempData]);\n        this.setState({\n          tData: [...tempData]\n        });\n        console.log(\"a2\", this.state.tData);\n        //for loop the real-time clicked data\n        if (startDate !== null) {\n          startDate.setDate(startDate.getDate() + 1);\n        } else {\n          let today = new Date();\n          return today;\n        }\n      }\n    } else {\n      tempData.push({\n        date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n        entry: null,\n        attNote: null,\n        attachments: null\n      });\n      console.log(\"a1\", [...tempData]);\n      this.setState({\n        tData: [...tempData]\n      });\n      console.log(\"a2\", this.state.tData);\n    }\n\n    this.attendance = [];\n    let match;\n    let cloneData = [...this.state.tData];\n    //to map the function\n    let realDates = this.state.tData.map((realDate, i) => {\n      match = this.state.user.attendance.filter(val => {\n        return val.date === realDate.date;\n      });\n      console.log(\"realClick\", realDate.date);\n\n      if (match.length > 0) {\n        cloneData[i] = { ...match[0] };\n        this.setState({ tData: [...cloneData] });\n        console.log(\"final dummy data\", [...this.state.tData]);\n      }\n\n      /*       let selectEntryTimeResult;\n      if (this.state.user.role == \"trainer\") {\n        selectEntryTimeResult = (\n          <EntryTimeSelect\n            onSave={this.HandleEnterTimeReset}\n            onChange={this.HandleEnterTimeReset}\n            entry={this.state.tData[i].entry}\n            value={realDate.date} //to match the rel click to the cliked date\n          />\n        );\n      } else if (this.state.user.role == \"manager\") {\n        selectEntryTimeResult = (\n          <EntryTimeSelect\n            onSave={this.HandleEnterTimeReset}\n            onChange={this.HandleEnterTimeReset}\n            entry={this.state.tData[i].entry}\n            value={realDate.date} //to match the rel click to the cliked date\n          />\n        );\n      } else {\n        selectEntryTimeResult = this.state.tData[i].entry;\n      }\n\n      let studentNoteResult;\n      if (this.state.user.role == \"attendee\") {\n        studentNoteResult = (\n          <AttendenceNote\n            onClick={this.HandleAttendenceNote}\n            onClose={this.HandleAttendenceNote}\n            onChange={this.HandleAttendenceNote}\n            attNote={this.state.tData[i].attNote}\n            onCancel={this.HandleAttendenceNote}\n            value={realDate.date} //from getDateDiff event\n          />\n        );\n      } else {\n        studentNoteResult = this.state.tData[i].attNote;\n      }\n\n      let uploadResult;\n      if (this.state.user.role == \"attendee\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else if (this.state.user.role == \"trainer\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else if (this.state.user.role == \"manager\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else {\n        uploadResult = this.state.tData[i].attachments;\n      }\n\n */\n\n      this.finalTable.push(\n        <tr key={i} align=\"center\">\n          <td>{this.state.tData[i].date} </td>\n          <td>1</td>\n          <td>2</td>\n          <td>3</td>\n\n          {/* <td>{selectEntryTimeResult}</td>\n          <td>{studentNoteResult}</td>\n          <td>{uploadResult}</td> */}\n        </tr>\n      );\n\n      // startDate.setDate(startDate.getDate() + 1);\n      this.setState({\n        catchDate: true\n      });\n      console.log(\"realDate\", realDate.date);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <h4>Select your Data here</h4>\n        <DateRange\n          onClose={this.getDateDiff}\n          dateDiff={this.state.dateDiff}\n          startDate={this.state.startDate}\n          endDate={this.state.endDate}\n        />\n        <td>{this.finalTable}</td>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}