{"version":3,"sources":["components/DateRangePicker/dateRangePicker.js","components/Dashboard/dashboard.js","components/NewItem/newItem.js","components/ItemList/itemList.js","components/main.js","App.js","index.js"],"names":["DateRangePicker","onDateChanges","stDate","enDate","startDate","endDate","dateDiff","Math","round","console","log","setState","props","onClose","className","style","color","this","React","Component","Dashboard","getDateDiff","match","tempData","finalTable","state","undefined","i","push","date","moment","format","entry","attNote","attachments","tData","Date","setDate","getDate","attendance","cloneData","map","realDate","user","filter","val","length","key","align","catchDate","studentTable","today","getFullYear","getMonth","firstname","lastname","email","schoolName","role","exit","timeDiff","status","trainerNote","alert","selectedStudent","studentList","selectStudentTable","hours1","min1","hours2","min2","sec1","sec2","bind","NewItem","useState","newItemText","setNewItemText","onSubmit","event","preventDefault","newItem","id","random","toString","text","onAddItem","height","type","value","onChange","target","margin","padding","width","ItemList","items","item","avatar","spend","Main","defaultItems","setItems","prevItems","concat","App","openNav","document","getElementById","marginLeft","closeNav","href","onClick","background","to","styles","fontSize","cursor","path","component","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.1e1a81b2.chunk.js","sourcesContent":["import React from \"react\";\nimport RangePicker from \"react-range-picker\";\n\nclass DateRangePicker extends React.Component {\n  onDateChanges = (stDate, enDate) => {\n    let startDate = stDate;\n    let endDate = enDate;\n    let dateDiff = Math.round((endDate - startDate) / (1000 * 3600 * 24)) + 1;\n    console.log(\n      \" olddatediff \",\n      Math.round((endDate - startDate) / (1000 * 3600 * 24) + 1)\n    );\n\n    console.log(\"oldStart\", startDate);\n    console.log(\"oldend\", endDate);\n\n    this.setState({\n      startDate: startDate,\n      endDate: endDate,\n      dateDiff: dateDiff\n    });\n    console.log(\"newStart\", startDate);\n    console.log(\"end\", endDate);\n    console.log(\n      \" newdatediff \",\n      Math.round((endDate - startDate) / (1000 * 3600 * 24) + 1)\n    );\n\n    // this.props.onDateSelected(dateDiff, startDate, endDate);\n    this.props.onClose(dateDiff, startDate, endDate);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"RangePicker\"\n        style={{\n          color: \"rgba(0, 0, 0, 0.8)\"\n        }}\n      >\n        <RangePicker onClose={this.onDateChanges} />\n      </div>\n    );\n  }\n}\n\nexport default DateRangePicker;\n","import React, { Component } from \"react\";\nimport DateRange from \"../DateRangePicker/dateRangePicker\";\nimport moment from \"moment\";\n// import axios from \"axios\";\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.studentTable = [];\n    let today = new Date(),\n      date =\n        today.getFullYear() +\n        \"-\" +\n        (today.getMonth() + 1) +\n        \"-\" +\n        today.getDate();\n\n    this.state = {\n      user: {\n        //trainer self\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        className: [\"Fbw1\", \"Fbw2\"],\n        schoolName: \"DCI\",\n        role: \"trainer\",\n        attendance: [\n          {\n            date: \"01.12.2019\",\n            entry: \"10:39 am\",\n            exit: \"04:45 pm\",\n            timeDiff: \"08:00 am\",\n            status: \"Late\",\n            attNote: \"late train\",\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"02.12.2019\",\n            entry: \"12:00 am\",\n            exit: \"17:00 am\",\n            timeDiff: \"07:00 am\",\n            status: \"Late\",\n            attNote: null,\n            trainerNote: \"please offer me a prove, thanks \",\n            attachments: []\n          },\n          {\n            date: \"03.12.2019\",\n            entry: \"11:00 am\",\n            exit: \"13:00 am\",\n            timeDiff: \"05:00 am\",\n            status: \"Late\",\n            attNote: \"Bus was late. Plase find enclosed attachments\",\n            trainerNote: null,\n            attachments: \"03.12.2019_1.jpg\",\n            alert: null\n          },\n          {\n            date: \"04.12.2019\",\n            entry: null,\n            exit: null,\n            timeDiff: \"02:00 am\",\n            status: \"Late\",\n            attNote: null,\n            trainerNote: \"ok\",\n            attachments: []\n          },\n          {\n            date: \"05.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"06.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"07.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"08.12.2019\",\n            entry: \"08:30 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"04:00 am\",\n            status: \"On Time\",\n            attNote: \"Bus was late. Plase find enclosed attachments\",\n            trainerNote: null,\n            attachments: \"08.12.2019_1.jpg\"\n          },\n          {\n            date: \"09.12.2019\",\n            entry: \"08:30 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          },\n          {\n            date: \"10.12.2019\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"08:00 am\",\n            status: \"On Time\",\n            attNote: null,\n            trainerNote: null,\n            attachments: []\n          }\n        ]\n      },\n      tData: [],\n      selectedStudent: \"\",\n      studentList: [],\n      selectStudentTable: [],\n      date: date,\n      entry: \"\",\n      exit: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      dateDiff: \"\",\n      attNote: \"\",\n      trainerNote: \"\",\n      attachments: \"\",\n      status: \"\",\n      hours1: \"\",\n      min1: \"\",\n      hours2: \"\",\n      min2: \"\",\n      sec1: \"\",\n      sec2: \"\",\n      timeDiff: \"\",\n      catchDate: false\n    };\n\n    this.getDateDiff = this.getDateDiff.bind(this);\n    //     this.HandleEnterTimeReset = this.HandleEnterTimeReset.bind(this);\n    //     this.HandleAttendenceNote = this.HandleAttendenceNote.bind(this);\n    //     this.HandleAttachment = this.HandleAttachment.bind(this);\n  }\n\n  //   componentDidMount() {\n  //     axios({\n  //       method: \"get\",\n  //       url: \"https://attrc.herokuapp.com/api/dashboard/\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"x-auth-token\": localStorage.getItem(\"jwtToken\")\n  //       }\n  //     }).then(res => {\n  //       const user = res.data.result.user;\n  //       console.log(user);\n  //       this.setState({ user: user });\n  //       console.log(this.state.user);\n  //     });\n  //   }\n\n  //   HandleEnterTimeReset(val, date) {\n  //     //selected entrytime\n  //     let entry = val;\n  //     console.log(\"entry time\", entry);\n\n  //     //selected date\n  //     let entryDate = date;\n  //     console.log(\"entry time date\", entryDate);\n\n  //     let matchArr = [];\n  //     let entryDates = this.state.tData.map(entryDate => {\n  //       var entryDate = date;\n  //       console.log(entryDate);\n  //       matchArr = this.state.user.attendance.filter(val => {\n  //         return val.date === entryDate;\n  //       });\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].entry = entry;\n  //         this.setState({ attendance: [...matchArr] });\n  //       }\n  //       console.log(\"Entry reset matchArr\", matchArr);\n  //       console.log(\"this.state.user.entry\", this.state.tData);\n  //     });\n\n  //     this.setState({\n  //       entry: entry //to reset the entrytime to the state and send it to the trainer entry time\n  //     });\n  //   }\n\n  //   HandleAttendenceNote(val, date) {\n  //     var attNote = val;\n  //     console.log(\"attNote val\", attNote);\n\n  //     //pass the selected date from textedit from child component\n  //     var attDate = date;\n  //     console.log(\"attNote val selected date\", attDate);\n\n  //     let matchArr = [];\n  //     let attDates = this.state.tData.map((attDate, i) => {\n  //       var attDate = date;\n  //       console.log(attDate);\n  //       matchArr = this.state.user.attendance.filter((val, i) => {\n  //         return val.date === attDate;\n  //       });\n  //       console.log(\"matchArr attNote update\", matchArr);\n\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].attNote = attNote;\n  //         this.setState({ attendance: [...matchArr], attNote: attNote });\n  //       }\n  //     });\n  //   }\n\n  //   HandleAttachment(val, date) {\n  //     let attachments = val;\n  //     console.log(\"attachment value\", attachments);\n\n  //     var fileDate = date;\n  //     console.log(\"attachment date\", fileDate);\n\n  //     let matchArr;\n  //     let fileDates = this.state.tData.map((fileDate, i) => {\n  //       matchArr = this.state.user.attendance.filter((val, i) => {\n  //         return val.date === fileDate;\n  //       });\n  //       console.log(\"attachment final matchArr\", matchArr);\n\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].attachments = attachments;\n\n  //         this.setState({\n  //           attendance: [...matchArr],\n  //           attachments: attachments\n  //         });\n  //       }\n  //     });\n  //   }\n\n  getDateDiff = (dateDiff, startDate, endDate) => {\n    this.setState({\n      dateDiff: dateDiff,\n      startDate: startDate,\n      endDate: endDate\n    });\n    var tempData = [];\n\n    this.finalTable = [];\n    console.log(\"diff\", this.state.dateDiff);\n    console.log(\"start\", this.state.startDate);\n    console.log(\"end\", this.state.endDate);\n\n    if (endDate !== undefined) {\n      for (let i = 0; i < this.state.dateDiff; i++) {\n        tempData.push({\n          date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n          entry: null,\n          attNote: null,\n          attachments: null\n        });\n        console.log(\"diff\", this.state.dateDiff);\n        console.log(\"a1\", [...tempData]);\n        this.setState({\n          tData: [...tempData]\n        });\n        console.log(\"a2\", this.state.tData);\n        //for loop the real-time clicked data\n        if (startDate !== null) {\n          startDate.setDate(startDate.getDate() + 1);\n        } else {\n          let today = new Date();\n          return today;\n        }\n      }\n    } else {\n      tempData.push({\n        date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n        entry: null,\n        attNote: null,\n        attachments: null\n      });\n      console.log(\"a1\", [...tempData]);\n      this.setState({\n        tData: [...tempData]\n      });\n      console.log(\"a2\", this.state.tData);\n    }\n\n    this.attendance = [];\n    let match;\n    let cloneData = [...this.state.tData];\n    //to map the function\n    let realDates = this.state.tData.map((realDate, i) => {\n      match = this.state.user.attendance.filter(val => {\n        return val.date === realDate.date;\n      });\n      console.log(\"realClick\", realDate.date);\n\n      if (match.length > 0) {\n        cloneData[i] = { ...match[0] };\n        this.setState({ tData: [...cloneData] });\n        console.log(\"final dummy data\", [...this.state.tData]);\n      }\n\n      /*       let selectEntryTimeResult;\n      if (this.state.user.role == \"trainer\") {\n        selectEntryTimeResult = (\n          <EntryTimeSelect\n            onSave={this.HandleEnterTimeReset}\n            onChange={this.HandleEnterTimeReset}\n            entry={this.state.tData[i].entry}\n            value={realDate.date} //to match the rel click to the cliked date\n          />\n        );\n      } else if (this.state.user.role == \"manager\") {\n        selectEntryTimeResult = (\n          <EntryTimeSelect\n            onSave={this.HandleEnterTimeReset}\n            onChange={this.HandleEnterTimeReset}\n            entry={this.state.tData[i].entry}\n            value={realDate.date} //to match the rel click to the cliked date\n          />\n        );\n      } else {\n        selectEntryTimeResult = this.state.tData[i].entry;\n      }\n\n      let studentNoteResult;\n      if (this.state.user.role == \"attendee\") {\n        studentNoteResult = (\n          <AttendenceNote\n            onClick={this.HandleAttendenceNote}\n            onClose={this.HandleAttendenceNote}\n            onChange={this.HandleAttendenceNote}\n            attNote={this.state.tData[i].attNote}\n            onCancel={this.HandleAttendenceNote}\n            value={realDate.date} //from getDateDiff event\n          />\n        );\n      } else {\n        studentNoteResult = this.state.tData[i].attNote;\n      }\n\n      let uploadResult;\n      if (this.state.user.role == \"attendee\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else if (this.state.user.role == \"trainer\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else if (this.state.user.role == \"manager\") {\n        uploadResult = (\n          <Upload\n            onClick={this.HandleAttachment}\n            onChange={this.HandleAttachment}\n            attachments={this.state.tData[i].attachments}\n            value={realDate.date}\n          />\n        );\n      } else {\n        uploadResult = this.state.tData[i].attachments;\n      }\n\n */\n\n      this.finalTable.push(\n        <tr key={i} align=\"center\">\n          <td>{this.state.tData[i].date} </td>\n          <td>1</td>\n          <td>2</td>\n          <td>3</td>\n\n          {/* <td>{selectEntryTimeResult}</td>\n          <td>{studentNoteResult}</td>\n          <td>{uploadResult}</td> */}\n        </tr>\n      );\n\n      // startDate.setDate(startDate.getDate() + 1);\n      this.setState({\n        catchDate: true\n      });\n      console.log(\"realDate\", realDate.date);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <h4>Select your Data here</h4>\n        <DateRange\n          onClose={this.getDateDiff}\n          dateDiff={this.state.dateDiff}\n          startDate={this.state.startDate}\n          endDate={this.state.endDate}\n        />\n        <td>{this.finalTable}</td>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport \"./newItem.css\";\n\nconst NewItem = props => {\n  const [newItemText, setNewItemText] = useState(\"\");\n\n  const addItemHandler = event => {\n    event.preventDefault();\n\n    const newItem = {\n      id: Math.random().toString(),\n      text: newItemText\n    };\n    setNewItemText(\"\");\n    props.onAddItem(newItem); //from parent component\n  };\n\n  const newItemTextInput = event => {\n    event.preventDefault();\n\n    setNewItemText(event.target.value);\n  };\n\n  return (\n    <div onSubmit={addItemHandler} className=\"new-item\">\n      <form style={{ height: \"40px\" }}>\n        <input\n          type=\"text\"\n          value={newItemText}\n          onChange={newItemTextInput}\n          style={{ height: \"36px\", margin: \"0px\", padding: \"0\" }}\n        ></input>\n        <button\n          style={{\n            height: \"40px\",\n            width: \"100px\",\n            margin: \"0px\",\n            padding: \"0\"\n          }}\n          type=\"submit\"\n        >\n          ADD\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewItem;\n","import React from \"react\";\nimport \"./itemList.css\";\n\nconst ItemList = props => {\n  let today = new Date();\n  console.log(today);\n  let date =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n  let user = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    avatar:\n      \"https://images.emojiterra.com/google/android-pie/512px/1f937-2640.png\"\n  };\n  return (\n    <div>\n      <div> {date}</div>\n      <div className=\"item-list\">\n        {props.items.map(item => {\n          return (\n            <figure key={item.id}>\n              <div>{item.avatar}</div>\n              <figcaption>\n                <div>{item.text}</div>\n                <div>{item.spend}</div>\n              </figcaption>\n            </figure>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React, { useState } from \"react\";\nimport NewItem from \"./NewItem/newItem\";\nimport ItemList from \"./ItemList/itemList\";\n\nfunction Main() {\n  const [defaultItems, setItems] = useState([\n    {\n      id: 1,\n      text: \"Food & Drinks\",\n      avatar: \"🍔 & 🍺\"\n    },\n    { id: 2, text: \"entertainment & Fun\", avatar: \"🥳 & 🎞️\" },\n    { id: 3, text: \"Trainning & Study\", avatar: \"📖 & 🏫\" },\n    { id: 4, text: \"Clothes & Shoes\", avatar: \"👗 & 🛍️\" },\n    { id: 5, text: \"Sports & Workout\", avatar: \"⛷️ & ⛹🏽‍♂️\" }\n  ]);\n\n  const onListHandle = newItem => {\n    setItems(prevItems => prevItems.concat(newItem));\n  };\n\n  return (\n    <div className=\"main\">\n      <ItemList items={defaultItems}></ItemList>\n      <NewItem onAddItem={onListHandle}></NewItem>\n    </div>\n  );\n}\n\n// mongodb+srv://smart-pocket:1988915roro@cluster0-9eok3.mongodb.net/test?retryWrites=true&w=majority\n\nexport default Main;\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard/dashboard\";\nimport Main from \"./components/main\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  openNav = () => {\n    if (\n      document.getElementById(\"mySidenav\") &&\n      document.getElementById(\"main\")\n    ) {\n      document.getElementById(\"mySidenav\").style.width = \"250px\";\n      document.getElementById(\"main\").style.marginLeft = \"250px\";\n    }\n  };\n\n  closeNav = () => {\n    if (\n      document.getElementById(\"mySidenav\") &&\n      document.getElementById(\"main\")\n    ) {\n      document.getElementById(\"mySidenav\").style.width = \"0\";\n      document.getElementById(\"main\").style.marginLeft = \"0\";\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <aside>\n            <nav>\n              <div id=\"mySidenav\" className=\"sidenav\">\n                <a\n                  href=\"javascript:void(0)\"\n                  className=\"closebtn\"\n                  onClick={this.closeNav}\n                >\n                  &times;\n                </a>\n                <button style={{ background: \"white\" }}>\n                  <Link to=\"/homepage\">Go To Add Money Spend</Link>\n                </button>\n                <button style={{ background: \"white\" }}>\n                  <Link to=\"/dashboard\">Go To Money Record</Link>\n                </button>\n              </div>\n\n              <div id=\"main\">\n                <span\n                  styles={{ fontSize: \"30\", cursor: \"pointer\" }}\n                  onClick={this.openNav}\n                >\n                  &#9776; open\n                </span>\n              </div>\n            </nav>\n          </aside>\n          <main>\n            <h1>Welcome , easily record your daily spending here!</h1>\n            <Route path=\"/homepage\" component={Main}></Route>\n            <Route path=\"/dashboard\" component={Dashboard}></Route>\n\n            <button>\n              <Link to=\"/\">Go BACK</Link>\n            </button>\n\n            <Route exact path=\"/\"></Route>\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\n// mongodb+srv://smart-pocket:1988915roro@cluster0-9eok3.mongodb.net/test?retryWrites=true&w=majority\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}