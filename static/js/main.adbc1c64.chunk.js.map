{"version":3,"sources":["components/dateRangePicker.js","components/numberPicker.js","components/note.js","components/dashboard.js","components/NewItem/newItem.js","components/ItemList/itemList.js","components/main.js","App.js","index.js"],"names":["DateRangePicker","onDateChanges","stDate","enDate","startDate","endDate","dateDiff","Math","round","console","log","setState","props","onClose","className","style","color","this","React","Component","Wrapper","state","value","currency","showDecimal","date","Date","new_value","today","dateOfMoney","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","onChange","handleChange","bind","Note","changenote","event","note","target","noteDate","onClick","submitNote","preventDefault","visible","tData","closeWindow","content","show","hide","trigger","height","width","wordWrap","background","marginBottom","fontSize","id","onSubmit","for","type","placeholder","margin","Dashboard","getDateDiff","match","tempData","finalTable","undefined","i","push","moment","format","entry","attachments","setDate","attendance","cloneData","map","realDate","noteResult","user","filter","val","length","HandleNote","onCancel","border","alignItems","borderRadius","catchDate","studentTable","firstname","lastname","email","exit","alert","timeDiff","selectedStudent","studentList","selectStudentTable","trainerNote","hours1","min1","hours2","min2","sec1","sec2","attDate","matchArr","display","flexWrap","justifyContent","NewItem","useState","newItemText","setNewItemText","newItem","random","toString","text","onAddItem","padding","ItemList","items","item","key","avatar","spend","Main","defaultItems","setItems","prevItems","concat","App","openNav","document","getElementById","marginLeft","transition","closeNav","href","to","align","cursor","path","component","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.adbc1c64.chunk.js","sourcesContent":["import React from \"react\";\nimport RangePicker from \"react-range-picker\";\n\nclass DateRangePicker extends React.Component {\n  onDateChanges = (stDate, enDate) => {\n    let startDate = stDate;\n    let endDate = enDate;\n    let dateDiff = Math.round((endDate - startDate) / (1000 * 3600 * 24)) + 1;\n    console.log(\n      \" olddatediff \",\n      Math.round((endDate - startDate) / (1000 * 3600 * 24) + 1)\n    );\n\n    console.log(\"oldStart\", startDate);\n    console.log(\"oldend\", endDate);\n\n    this.setState({\n      startDate: startDate,\n      endDate: endDate,\n      dateDiff: dateDiff\n    });\n    console.log(\"newStart\", startDate);\n    console.log(\"end\", endDate);\n    console.log(\n      \" newdatediff \",\n      Math.round((endDate - startDate) / (1000 * 3600 * 24) + 1)\n    );\n\n    // this.props.onDateSelected(dateDiff, startDate, endDate);\n    this.props.onClose(dateDiff, startDate, endDate);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"RangePicker\"\n        style={{\n          color: \"rgba(0, 0, 0, 0.8)\"\n        }}\n      >\n        <RangePicker onClose={this.onDateChanges} />\n      </div>\n    );\n  }\n}\n\nexport default DateRangePicker;\n","import React from \"react\";\nimport NumberPicker from \"react-number-picker\";\n\nimport \"react-number-picker/dist/style.css\";\n\nconst Wrapper = class Wrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 100.0,\n      currency: \"U$\",\n      showDecimal: true,\n      date: new Date()\n    };\n  }\n\n  handleChange(new_value, date) {\n    var today = new Date();\n    let dateOfMoney =\n      today.getFullYear() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getDate() +\n      \"-\" +\n      today.getHours() +\n      \":\" +\n      today.getMinutes() +\n      \":\" +\n      today.getSeconds();\n    console.log(\"new value\", new_value, dateOfMoney);\n    this.setState({ value: new_value, dateOfMoney });\n  }\n\n  render() {\n    return (\n      <NumberPicker\n        value={this.state.value}\n        currency={this.state.currency}\n        showDecimal={this.state.showDecimal}\n        onChange={this.handleChange.bind(this)}\n      />\n    );\n  }\n};\n\nexport default Wrapper;\n","import React from \"react\";\nimport Rodal from \"rodal\";\nimport { Popover, Button, Form } from \"antd\";\nimport NumberPicker from \"./numberPicker\";\n// import \"./css/dashboard.css\";\nimport \"rodal/lib/rodal.css\";\nimport \"antd/dist/antd.css\";\n\nclass Note extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n      note: this.props.tData\n    };\n    this.submitNote = this.submitNote.bind(this);\n    this.show = this.show.bind(this);\n    this.hide = this.hide.bind(this);\n    this.closeWindow = this.closeWindow.bind(this);\n  }\n\n  show() {\n    this.setState({ visible: true });\n  }\n\n  hide() {\n    this.setState({ visible: false, note: null });\n  }\n\n  changenote = (event, date) => {\n    let note = event.target.value;\n    this.setState({ note: note });\n    console.log(\"note val:\", note);\n\n    let noteDate = date;\n    noteDate = this.props.value; //get the date from dashbord to this child component\n    console.log(\"date:\", noteDate);\n    this.props.onClick(note, noteDate);\n  };\n\n  submitNote = event => {\n    event.preventDefault();\n    // const updatedData = {\n    //   id: Math.random().toString(),\n    //   date: \"\",\n    //   parameter: this.state.note,\n    //   val: event\n    // };\n    this.setState({ visible: false, tData: event });\n    // this.props.onSubmit(updatedData);\n\n    console.log(\"substatenote\", this.state.note);\n    console.log(\"subpropsnote\", this.props.note);\n  };\n\n  closeWindow = () => {\n    this.setState({ visible: false, note: null });\n  };\n\n  content = (\n    <div>\n      <p>write your spend!</p>\n    </div>\n  );\n\n  render() {\n    return (\n      <div>\n        <Popover content={this.content} trigger=\"hover\">\n          <Button\n            value={this.state.note}\n            onClick={this.show}\n            style={{\n              height: \"100px\",\n              width: \"90%\",\n              color: \"rgba(0, 0, 0, 0.8)\",\n              wordWrap: \"break-all \",\n              background: \"skyblue\",\n              marginBottom: \"2%\"\n            }}\n          >\n            <span>📝</span>\n            {this.props.note}\n            {this.state.note}\n          </Button>\n\n          <NumberPicker></NumberPicker>\n        </Popover>\n\n        <Rodal\n          visible={this.state.visible}\n          onClose={this.hide}\n          value=\"write here\"\n        >\n          <div\n            style={{\n              fontSize: \"20px\",\n              color: \"white\",\n              background: \"skyblue\",\n              height: \"100%\"\n            }}\n          >\n            <Form id=\"hideAttForm\" onSubmit={this.submitNote}>\n              <h4\n                for=\"text\"\n                style={{\n                  fontSize: \"20px\",\n                  color: \"white\",\n                  background: \"skyblue\"\n                }}\n              >\n                daily spend note\n              </h4>\n              <textarea\n                type=\"text\"\n                onChange={this.changenote}\n                onClose={this.hide}\n                placeholder=\"\"\n                style={{ height: \"100px\", width: \"200px\" }}\n              />\n              <br></br>\n\n              <Button\n                type=\"button\"\n                onClick={this.hide}\n                value=\"Cancel\"\n                style={{\n                  background: \"lightgrey\",\n                  margin: \"2%\",\n                  color: \"white\"\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                type=\"button\"\n                value=\"Submit\"\n                onClick={this.submitNote}\n                style={{ background: \"yellow\", margin: \"2%\", color: \"white\" }}\n              >\n                Submit\n              </Button>\n            </Form>\n          </div>\n        </Rodal>\n      </div>\n    );\n  }\n}\nexport default Note;\n","import React, { Component } from \"react\";\nimport DateRange from \"./dateRangePicker\";\nimport Note from \"./note\";\nimport moment from \"moment\";\n\n// import axios from \"axios\";\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super();\n    this.studentTable = [];\n    let today = new Date(),\n      date =\n        today.getFullYear() +\n        \"-\" +\n        (today.getMonth() + 1) +\n        \"-\" +\n        today.getDate();\n\n    this.state = {\n      user: {\n        //trainer self\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        attendance: [\n          {\n            date: \"01.02.2020\",\n            entry: \"10:39 am\",\n            exit: \"04:45 pm\",\n            note: \"train\",\n            attachments: []\n          },\n          {\n            date: \"02.02.2020\",\n            entry: \"12:00 am\",\n            exit: \"17:00 am\",\n            note: \"transpotation\",\n            attachments: []\n          },\n          {\n            date: \"03.02.2020\",\n            entry: \"11:00 am\",\n            exit: \"13:00 am\",\n            note: \"shisha\",\n            attachments: \"03.02.2020_1.jpg\",\n            alert: null\n          },\n          {\n            date: \"04.02.2020\",\n            entry: null,\n            exit: null,\n            note: \"transpotation\",\n            attachments: []\n          },\n          {\n            date: \"05.02.2020\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            note: \"transpotation\",\n            attachments: []\n          },\n          {\n            date: \"06.02.2020\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            note: \"transpotation\",\n            attachments: []\n          },\n          {\n            date: \"07.02.2020\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n\n            note: \"transpotation\",\n            attachments: []\n          },\n          {\n            date: \"08.02.2020\",\n            entry: \"08:30 am\",\n            exit: \"16:00 am\",\n            timeDiff: \"04:00 am\",\n\n            note: \"food\",\n            attachments: \"08.02.2020_1.jpg\"\n          },\n          {\n            date: \"09.02.2020\",\n            entry: \"08:30 am\",\n            exit: \"16:00 am\",\n\n            note: \"transpotation\",\n            attachments: []\n          },\n          {\n            date: \"10.02.2020\",\n            entry: \"08:00 am\",\n            exit: \"16:00 am\",\n            note: \"entermainment\",\n            attachments: []\n          }\n        ]\n      },\n      tData: [],\n      selectedStudent: \"\",\n      studentList: [],\n      selectStudentTable: [],\n      date: date,\n      entry: \"\",\n      exit: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      dateDiff: \"\",\n      note: \"\",\n      trainerNote: \"\",\n      attachments: \"\",\n      hours1: \"\",\n      min1: \"\",\n      hours2: \"\",\n      min2: \"\",\n      sec1: \"\",\n      sec2: \"\",\n      timeDiff: \"\",\n      catchDate: false\n    };\n\n    this.getDateDiff = this.getDateDiff.bind(this);\n    //     this.HandleEnterTimeReset = this.HandleEnterTimeReset.bind(this);\n    this.HandleNote = this.HandleNote.bind(this);\n    //     this.HandleAttachment = this.HandleAttachment.bind(this);\n  }\n\n  //   componentDidMount() {\n  //     axios({\n  //       method: \"get\",\n  //       url: \"https://attrc.herokuapp.com/api/dashboard/\",\n  //       headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         \"x-auth-token\": localStorage.getItem(\"jwtToken\")\n  //       }\n  //     }).then(res => {\n  //       const user = res.data.result.user;\n  //       console.log(user);\n  //       this.setState({ user: user });\n  //       console.log(this.state.user);\n  //     });\n  //   }\n\n  //   HandleEnterTimeReset(val, date) {\n  //     //selected entrytime\n  //     let entry = val;\n  //     console.log(\"entry time\", entry);\n\n  //     //selected date\n  //     let entryDate = date;\n  //     console.log(\"entry time date\", entryDate);\n\n  //     let matchArr = [];\n  //     let entryDates = this.state.tData.map(entryDate => {\n  //       var entryDate = date;\n  //       console.log(entryDate);\n  //       matchArr = this.state.user.attendance.filter(val => {\n  //         return val.date === entryDate;\n  //       });\n  //       if (matchArr.length > 0) {\n  //         matchArr[0].entry = entry;\n  //         this.setState({ attendance: [...matchArr] });\n  //       }\n  //       console.log(\"Entry reset matchArr\", matchArr);\n  //       console.log(\"this.state.user.entry\", this.state.tData);\n  //     });\n\n  //     this.setState({\n  //       entry: entry //to reset the entrytime to the state and send it to the trainer entry time\n  //     });\n  //   }\n\n  HandleNote(val, date) {\n    var note = val;\n    console.log(\"note val\", note);\n\n    //pass the selected date from textedit from child component\n    var attDate = date;\n    console.log(\"note val selected date\", attDate);\n\n    let matchArr = [];\n    let attDates = this.state.tData.map(attDate => {\n      var attDate = date;\n      console.log(attDate);\n      matchArr = this.state.user.attendance.filter(val => {\n        return val.date === attDate;\n      });\n      console.log(\"matchArr note update\", matchArr);\n      if (matchArr.length > 0) {\n        matchArr[0].note = note;\n        this.setState({ attendance: [...matchArr], note: note });\n      }\n    });\n  }\n\n  // HandleAttachment(val, date) {\n  //   let attachments = val;\n  //   console.log(\"attachment value\", attachments);\n\n  //   var fileDate = date;\n  //   console.log(\"attachment date\", fileDate);\n\n  //   let matchArr;\n  //   let fileDates = this.state.tData.map((fileDate, i) => {\n  //     matchArr = this.state.user.attendance.filter((val, i) => {\n  //       return val.date === fileDate;\n  //     });\n  //     console.log(\"attachment final matchArr\", matchArr);\n\n  //     if (matchArr.length > 0) {\n  //       matchArr[0].attachments = attachments;\n\n  //       this.setState({\n  //         attendance: [...matchArr],\n  //         attachments: attachments\n  //       });\n  //     }\n  //   });\n  // }\n\n  getDateDiff = (dateDiff, startDate, endDate) => {\n    this.setState({\n      dateDiff: dateDiff,\n      startDate: startDate,\n      endDate: endDate\n    });\n    var tempData = [];\n\n    this.finalTable = [];\n    console.log(\"diff\", this.state.dateDiff);\n    console.log(\"start\", this.state.startDate);\n    console.log(\"end\", this.state.endDate);\n\n    if (endDate !== undefined) {\n      for (let i = 0; i < this.state.dateDiff; i++) {\n        tempData.push({\n          date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n          entry: null,\n          note: null,\n          attachments: null\n        });\n        console.log(\"diff\", this.state.dateDiff);\n        console.log(\"a1\", [...tempData]);\n        this.setState({\n          tData: [...tempData]\n        });\n        console.log(\"a2\", this.state.tData);\n        //for loop the real-time clicked data\n        if (startDate !== null) {\n          startDate.setDate(startDate.getDate() + 1);\n        } else {\n          let today = new Date();\n          return today;\n        }\n      }\n    } else {\n      tempData.push({\n        date: moment(this.state.startDate).format(\"DD.MM.YYYY\"),\n        entry: null,\n        note: null,\n        attachments: null\n      });\n      console.log(\"a1\", [...tempData]);\n      this.setState({\n        tData: [...tempData]\n      });\n      console.log(\"a2\", this.state.tData);\n    }\n\n    this.attendance = [];\n    let match;\n    let cloneData = [...this.state.tData];\n    //to map the function\n    let realDates = this.state.tData.map((realDate, i) => {\n      match = this.state.user.attendance.filter(val => {\n        return val.date === realDate.date;\n      });\n      console.log(\"realClick\", realDate.date);\n\n      if (match.length > 0) {\n        cloneData[i] = { ...match[0] };\n        this.setState({ tData: [...cloneData] });\n        console.log(\"final dummy data\", [...this.state.tData]);\n      }\n\n      // let selectEntryTimeResult;\n      // if (this.state.user.role == \"trainer\") {\n      //   selectEntryTimeResult = (\n      //     <EntryTimeSelect\n      //       onSave={this.HandleEnterTimeReset}\n      //       onChange={this.HandleEnterTimeReset}\n      //       entry={this.state.tData[i].entry}\n      //       value={realDate.date} //to match the rel click to the cliked date\n      //     />\n      //   );\n      // } else if (this.state.user.role == \"manager\") {\n      //   selectEntryTimeResult = (\n      //     <EntryTimeSelect\n      //       onSave={this.HandleEnterTimeReset}\n      //       onChange={this.HandleEnterTimeReset}\n      //       entry={this.state.tData[i].entry}\n      //       value={realDate.date} //to match the rel click to the cliked date\n      //     />\n      //   );\n      // } else {\n      //   selectEntryTimeResult = this.state.tData[i].entry;\n      // }\n\n      let noteResult;\n      noteResult = (\n        <Note\n          onClick={this.HandleNote}\n          onClose={this.HandleNote}\n          onChange={this.HandleNote}\n          note={this.state.tData[i].note}\n          onCancel={this.HandleNote}\n          value={realDate.date} //from getDateDiff event\n        />\n      );\n\n      // let uploadResult;\n      // if (this.state.user.role == \"attendee\") {\n      //   uploadResult = (\n      //     <Upload\n      //       onClick={this.HandleAttachment}\n      //       onChange={this.HandleAttachment}\n      //       attachments={this.state.tData[i].attachments}\n      //       value={realDate.date}\n      //     />\n      //   );\n      // } else if (this.state.user.role == \"trainer\") {\n      //   uploadResult = (\n      //     <Upload\n      //       onClick={this.HandleAttachment}\n      //       onChange={this.HandleAttachment}\n      //       attachments={this.state.tData[i].attachments}\n      //       value={realDate.date}\n      //     />\n      //   );\n      // } else if (this.state.user.role == \"manager\") {\n      //   uploadResult = (\n      //     <Upload\n      //       onClick={this.HandleAttachment}\n      //       onChange={this.HandleAttachment}\n      //       attachments={this.state.tData[i].attachments}\n      //       value={realDate.date}\n      //     />\n      //   );\n      // } else {\n      //   uploadResult = this.state.tData[i].attachments;\n      // }\n\n      this.finalTable.push(\n        <figcaption\n          style={{\n            width: \"20vw\",\n            height: \"40vh\",\n            border: \"1px solid grey\",\n            margin: \"1%\",\n            alignItems: \"center\",\n            borderRadius: \"10px\"\n          }}\n        >\n          <div>{this.state.tData[i].date}</div>\n\n          <div\n            style={{\n              width: \"20\",\n              height: \"70%\",\n              margin: \"1%\"\n            }}\n          >\n            {noteResult}\n          </div>\n          {/* <tr key={i} align=\"center\">\n          <td style={{ width: \"20\", border: \"1px solid grey\" }}>\n            {this.state.tData[i].date}\n          </td>\n          <td style={{ width: \"20\", border: \"1px solid grey\" }}>\n            {noteResult}\n          </td>\n\n         <td>{selectEntryTimeResult}</td>\n          <td>{noteResult}</td>\n          <td>{uploadResult}</td> \n        </tr> */}\n        </figcaption>\n      );\n\n      // startDate.setDate(startDate.getDate() + 1);\n      this.setState({\n        catchDate: true\n      });\n      console.log(\"realDate\", realDate.date);\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <h4>Select your Data here</h4>\n        <DateRange\n          onClose={this.getDateDiff}\n          dateDiff={this.state.dateDiff}\n          startDate={this.state.startDate}\n          endDate={this.state.endDate}\n        />\n\n        {/* <table\n          style={{\n            marginLeft: \"20%\",\n            textAlign: \"center\",\n            width: \"50%\"\n          }}\n        > \n\n          {this.finalTable}\n\n         </table> */}\n\n        <figure\n          style={{\n            width: \"100vw\",\n            height: \"80vh\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"center\"\n          }}\n        >\n          {this.finalTable}\n        </figure>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { useState } from \"react\";\nimport \"./newItem.css\";\n\nconst NewItem = props => {\n  const [newItemText, setNewItemText] = useState(\"\");\n\n  const addItemHandler = event => {\n    event.preventDefault();\n\n    const newItem = {\n      id: Math.random().toString(),\n      text: newItemText\n    };\n    setNewItemText(\"\");\n    props.onAddItem(newItem); //from parent component\n  };\n\n  const newItemTextInput = event => {\n    event.preventDefault();\n\n    setNewItemText(event.target.value);\n  };\n\n  return (\n    <div onSubmit={addItemHandler} className=\"new-item\">\n      <form style={{ height: \"40px\" }}>\n        <input\n          type=\"text\"\n          value={newItemText}\n          onChange={newItemTextInput}\n          style={{ height: \"36px\", margin: \"0px\", padding: \"0\" }}\n        ></input>\n        <button\n          style={{\n            height: \"40px\",\n            width: \"100px\",\n            margin: \"0px\",\n            padding: \"0\"\n          }}\n          type=\"submit\"\n        >\n          ADD\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default NewItem;\n","import React from \"react\";\nimport \"./itemList.css\";\n\nconst ItemList = props => {\n  let today = new Date();\n  console.log(today);\n  let date =\n    today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate();\n\n  let user = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    avatar:\n      \"https://images.emojiterra.com/google/android-pie/512px/1f937-2640.png\"\n  };\n  return (\n    <div>\n      <div> {date}</div>\n      <div className=\"item-list\">\n        {props.items.map(item => {\n          return (\n            <figure key={item.id}>\n              <div>{item.avatar}</div>\n              <figcaption>\n                <div>{item.text}</div>\n                <div>{item.spend}</div>\n              </figcaption>\n            </figure>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React, { useState } from \"react\";\nimport NewItem from \"./NewItem/newItem\";\nimport ItemList from \"./ItemList/itemList\";\n\nfunction Main() {\n  const [defaultItems, setItems] = useState([\n    {\n      id: 1,\n      text: \"Food & Drinks\",\n      avatar: \"🍔 & 🍺\"\n    },\n    { id: 2, text: \"entertainment & Fun\", avatar: \"🥳 & 🎞️\" },\n    { id: 3, text: \"Trainning & Study\", avatar: \"📖 & 🏫\" },\n    { id: 4, text: \"Clothes & Shoes\", avatar: \"👗 & 🛍️\" },\n    { id: 5, text: \"Sports & Workout\", avatar: \"⛷️ & ⛹🏽‍♂️\" }\n  ]);\n\n  const onListHandle = newItem => {\n    setItems(prevItems => prevItems.concat(newItem));\n  };\n\n  return (\n    <div className=\"main\">\n      <ItemList items={defaultItems}></ItemList>\n      <NewItem onAddItem={onListHandle}></NewItem>\n    </div>\n  );\n}\n\n// mongodb+srv://smart-pocket:1988915roro@cluster0-9eok3.mongodb.net/test?retryWrites=true&w=majority\n\nexport default Main;\n","import React from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard\";\nimport Main from \"./components/main\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  openNav = () => {\n    if (\n      document.getElementById(\"mySidenav\") &&\n      document.getElementById(\"main\")\n    ) {\n      document.getElementById(\"mySidenav\").style.width = \"250px\";\n      document.getElementById(\"main\").style.marginLeft = \"250px\";\n      document.getElementById(\"main\").style.marginLeft = \"250px\";\n\n      document.getElementById(\"main\").style.transition = \" width 2s\";\n\n      document.getElementById(\"main\").style.display = \"none\";\n    }\n  };\n\n  closeNav = () => {\n    if (\n      document.getElementById(\"mySidenav\") &&\n      document.getElementById(\"main\")\n    ) {\n      document.getElementById(\"mySidenav\").style.width = \"0\";\n      document.getElementById(\"main\").style.marginLeft = \"0\";\n      document.getElementById(\"main\").style.display = \"block\";\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <aside>\n            <nav>\n              <div id=\"mySidenav\" className=\"sidenav\">\n                <a\n                  href=\"javascript:void(0)\"\n                  className=\"closebtn\"\n                  onClick={this.closeNav}\n                >\n                  &times;\n                </a>\n                <button style={{ background: \"white\" }}>\n                  <Link to=\"/homepage\">Go To Add Money Spend</Link>\n                </button>\n                <button style={{ background: \"white\", margin: \"2%\" }}>\n                  <Link to=\"/dashboard\">Go To Money Record</Link>\n                </button>\n              </div>\n\n              <div id=\"main\" align=\"left\">\n                <span\n                  style={{\n                    fontSize: \"15px\",\n                    cursor: \"pointer\"\n                  }}\n                  onClick={this.openNav}\n                  id=\"openText\"\n                >\n                  &#9776; open\n                </span>\n              </div>\n            </nav>\n          </aside>\n          <main>\n            <h1>Welcome , easily record your daily spending here!</h1>\n            <Route path=\"/homepage\" component={Main}></Route>\n            <Route path=\"/dashboard\" component={Dashboard}></Route>\n\n            <button>\n              <Link to=\"/\">Go BACK</Link>\n            </button>\n\n            <Route exact path=\"/\"></Route>\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\n// mongodb+srv://smart-pocket:1988915roro@cluster0-9eok3.mongodb.net/test?retryWrites=true&w=majority\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}